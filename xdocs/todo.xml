<?xml version="1.0"?>

<document>
  <properties>
    <title>TODO</title>
    <author email="jstrachan@apache.org">James Strachan</author>
  </properties>

  <body>
    <section name="TODO list">
      <p>
        The following is a list of items that need to be completed in
        Betwixt.  Contributions are welcome! 
      </p>
      
    
    <section name="High priority"> 
      <ul>
        <li>
		  If an addFoo() method is found with no matching getFoos() then a warning should be generated.
		</li>
        <li>
		  <b>Fixed.</b> digester.peek() was giving warning. Now checking if it still has something to peek.
		  Currently betwixt causes digester to output a warning '[WARN] Digester - -Empty stack (returning null)'.
		  We should patch the way betwixt uses digester to avoid this warning message.
		</li>
        <li>
		  Consider allowing the parsing of XML to order the properties/elements in the XMLBeanInfo
		  so that when the XML is output again it follows the same XML ordering again.
		  There is an example describing this 
		  <a href="http://nagoya.apache.org/eyebrowse/ReadMsg?listName=commons-dev@jakarta.apache.org&amp;msgNo=8488">here</a>.
		  For example we could add a feature to parse the DTD and order the XMLBeanInfo according to the order in the DTD.		  
		</li>
        <li>
		  Improved documentation! Improve package level documentation so that new developers can get up 
          to speed more quickly. Ensure all betwixt features have good user documentation. 
          More good code examples.
        </li>
       </ul>
    </section>
    
    <section name="Medium priority"> 
      <ul>
        <li>
		  <b>Fixed</b>Using \n as default and now shows a warning when an invalid space character is used.<br/> Adding a check to only accept valid characters as lineEndings, so parsers actually won't choke on the output xml.
		  BeanWriter should have a setEndOfLine() method to allow configurable EOL strings, defaulting to "\n"
		</li>
        <li>
		  Create a SAXWriter class in the io package that takes a bean and writes to a SAX ContentHandler
		  rather that outputting textual XML like BeanWriter does.
		  This will allow Betwixt to work nicely in XML pipelining environments like Cocoon and Jelly.
		</li>
       </ul>
    </section>
    
    <section name="Low priority"> 
      <ul>
        <li>
		  Create a W3C DOM implementation that acts as a facade on top of beans to allow beans to 
		  be transformed in XSLT engines as XML.
		</li>
       </ul>
      <ul>
        <li>
		  Add support for custom class loaders. Probably this means adding a classloader property
                  to <code>XMLIntrospector</code> and then ensuring all class creation uses that. 
                  The digestion rules which create the <code>XMLBeanInfo</code> from <code>.betwixt</code>
                  files should use the <code>XMLBeanInfoDigester</code> classloader property which should
                  be set by the <code>XMLIntrospector</code>.
		</li>
       </ul>
    </section>
    
    </section>
  </body>
</document>

